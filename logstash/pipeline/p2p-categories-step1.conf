#input example:
# deatc10c1c5c2		deatc10c1c5		de_AT		Kugelleuchten

#output example (documento to insert on elastic search):
# {
#     "@version": "1",
#     "category":
#     {
#         "nane": "Kugelleuchten",
#         "code": "deatc10c1c5c2"
#     },
#     "code": "deatc10c1c5c2",
#     "@timestamp": "2022-07-15T08:48:33.060111Z",
#     "name": "Kugelleuchten",
#     "parentcategory":
#     {
#         "nane": "",
#         "code": "deatc10c1c5"
#     },
#     "rest":
#     [
#         {
#             "userId": 1,
#             "title": "qui est esse",
#             "body": "est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis qui aperiam non debitis possimus qui neque nisi nulla",
#             "id": 2
#         }
#     ]
# }

## NOTES
# we should remove the code prefix (locale/catalogue)... the categories should start by cXX

input {
    file {
        path => "/tmp/logstash/input/categories.csv"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
}

filter {
    grok { 
        match => {             
            "message" => "^(?<code>[^\t\s]+)[\t]+(?<parent_code>[^\t\s]+)[\t]+(?<locale>[^\t\s]+)[\t]+%{GREEDYDATA:name}" 
        } 
    }    

    if [code] == "category_id" {
        drop {}
    }

    ## This is only for test
    # Init
    if [locale] != "de_AT" {
        drop {}
    }
    if [code] !~ "deatc2" {
        drop {}
    }
    # End

    if [parent_code] == "online" {
        mutate {
            add_field => { "[@metadata][parentcategory_name]" => "online"}                            
        }
    } else {
        mutate {
            add_field => { "[@metadata][parentcategory_name]" => ""}                
        }

    }
    
    mutate {
        lowercase => [ "locale" ]
        add_field => { "[@metadata][target_index]" => "categories-xxxlutz-%{locale}-temp-%{+YYYY.MM.dd-HH}"}
        add_field => { "[category][name]" => "%{name}"}
        add_field => { "[category][code]" => "%{code}"}
        add_field => { "[parentcategory][name]" => "%{[@metadata][parentcategory_name]}"}                
        rename => { "parent_code" => "[parentcategory][code]" }

        ## This is only for test: following the status on the elasticsearch index
        add_field => { "step" => "step1"}
    }

    

    ## To install the alter plugin (logstash-plugin install logstash-filter-alter) and then uncomment    
    alter {
        remove_field => [ "event", "host", "log", "message" ]
    }

    ## Here we should introduce the http filter in order to request to FH the number of products for the category
    ## To install the rest plugin (logstash-plugin install logstash-filter-rest) and then uncomment
    rest { 
        request => { 
            url => "https://jsonplaceholder.typicode.com/posts" 
            method => "get" 
            params => { "id" => "2" } 
            headers => { "Content-Type" => "application/json" } 
        } 
        target => 'rest' 
    }

    
}

output {
    stdout {
        codec => rubydebug
    }

    elasticsearch {
        hosts => "${ELASTICSEARCH_HOST_PORT}"
        user => "${ELASTIC_USERNAME}"
        password => "${ELASTIC_PASSWORD}"
        ssl => true
        ssl_certificate_verification => false
        cacert => "/certs/ca.crt"
        index => "%{[@metadata][target_index]}"
        document_id => "%{code}"
    }
    
    pipeline { send_to => categoriesStep2 }
}


