#input example:
# deatc10c1c5c2		deatc10c1c5		de_AT		Kugelleuchten

#output example (documento to insert on elastic search):
# {
#     "@version": "1",
#     "category":
#     {
#         "nane": "Kugelleuchten",
#         "code": "deatc10c1c5c2"
#     },
#     "code": "deatc10c1c5c2",
#     "@timestamp": "2022-07-15T08:48:33.060111Z",
#     "name": "Kugelleuchten",
#     "parentcategory":
#     {
#         "nane": "",
#         "code": "deatc10c1c5"
#     },
#     "rest":
#     [
#         {
#             "userId": 1,
#             "title": "qui est esse",
#             "body": "est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis qui aperiam non debitis possimus qui neque nisi nulla",
#             "id": 2
#         }
#     ]
# }

input {
    beats {
        port => 5044
    }
    file {
        path => "/tmp/logstash/input/categories.csv"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
}

filter {
    grok { 
        match => {             
            "message" => "^(?<code>[^\t\s]+)[\t]+(?<parent_code>[^\t\s]+)[\t]+(?<locale>[^\t\s]+)[\t]+%{GREEDYDATA:name}" 
        } 
    }    

    if [code] == "category_id" {
        drop {}
    }

    # This is only for test
    if [locale] != "de_AT" {
        drop {}
    }
    
    mutate {
        lowercase => [ "locale" ]
        add_field => { "[@metadata][target_index]" => "categories-xxxlutz-%{locale}-temp-%{+YYYY.MM.dd-HH.mm}"}
        add_field => { "[category][nane]" => "%{name}"}
        add_field => { "[category][code]" => "%{code}"}
        add_field => { "[parentcategory][nane]" => ""}        
        rename => {
            "parent_code" => "[parentcategory][code]"
        }
    }

    ## To install the alter plugin (logstash-plugin install logstash-filter-alter) and then uncomment
    # alter {
    #     remove_field => [ "event", "host", "locale", "log", "message", "rest" ]
    # }

    ## Here we should introduce the http filter in order to request to FH the number of products for the category
    ## To install the rest plugin (logstash-plugin install logstash-filter-rest) and then uncomment
    rest { 
        request => { 
            url => "https://jsonplaceholder.typicode.com/posts" 
            method => "get" 
            params => { "id" => "2" } 
            headers => { "Content-Type" => "application/json" } 
        } 
        target => 'rest' 
    }

    
}

output {
    elasticsearch {
        hosts => "${ELASTICSEARCH_HOST_PORT}"
        user => "${ELASTIC_USERNAME}"
        password => "${ELASTIC_PASSWORD}"
        ssl => true
        ssl_certificate_verification => false
        cacert => "/certs/ca.crt"
        index => "%{[@metadata][target_index]}"

    }
    stdout {
        codec => rubydebug
    }
    # pipeline {
    #     send_to => pipe2
    # }
}

